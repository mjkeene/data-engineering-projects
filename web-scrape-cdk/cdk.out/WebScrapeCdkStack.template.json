{
 "Resources": {
  "ScrapedDataBucket7530AD91": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "WebScrapeCdkStack/ScrapedDataBucket/Resource"
   }
  },
  "ScraperFunctionServiceRole18715408": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebScrapeCdkStack/ScraperFunction/ServiceRole/Resource"
   }
  },
  "ScraperFunctionServiceRoleDefaultPolicy8F701F43": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ScrapedDataBucket7530AD91",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ScrapedDataBucket7530AD91",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ScraperFunctionServiceRoleDefaultPolicy8F701F43",
    "Roles": [
     {
      "Ref": "ScraperFunctionServiceRole18715408"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebScrapeCdkStack/ScraperFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ScraperFunction9503A55F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:f85155dacd07bb76123d17f7129e2eae72d9d71bc8d8a9a8d57151d46c56dde7"
     }
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "ScrapedDataBucket7530AD91"
      },
      "AWS_LAMBDA_HANDLER": "app.lambda_handler",
      "PLAYWRIGHT_BROWSERS_PATH": "0",
      "PYPPETEER_SKIP_CHROMIUM_DOWNLOAD": "true",
      "PWDEBUG": "0",
      "PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD": "1"
     }
    },
    "MemorySize": 1024,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "ScraperFunctionServiceRole18715408",
      "Arn"
     ]
    },
    "Timeout": 120
   },
   "DependsOn": [
    "ScraperFunctionServiceRoleDefaultPolicy8F701F43",
    "ScraperFunctionServiceRole18715408"
   ],
   "Metadata": {
    "aws:cdk:path": "WebScrapeCdkStack/ScraperFunction/Resource",
    "aws:asset:path": "asset.f85155dacd07bb76123d17f7129e2eae72d9d71bc8d8a9a8d57151d46c56dde7",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "HourlyScrapeRule48FBB8A8": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "rate(1 hour)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "ScraperFunction9503A55F",
        "Arn"
       ]
      },
      "Id": "Target0",
      "Input": "{\"url\":\"https://www.cars.com\"}"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebScrapeCdkStack/HourlyScrapeRule/Resource"
   }
  },
  "HourlyScrapeRuleAllowEventRuleWebScrapeCdkStackScraperFunction6205785AA5366CDE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ScraperFunction9503A55F",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "HourlyScrapeRule48FBB8A8",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebScrapeCdkStack/HourlyScrapeRule/AllowEventRuleWebScrapeCdkStackScraperFunction6205785A"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/01PQW7CMBB8C3dnC4n6gEKFxInIPAAZs6RLYht5barI8t9rhx44zezM7EjTQrtZw3qlfrnR17GZ6ALpFJQeRZHOiTtI26hHDGJ3sy+WxaTM5aogfbty+4NRA+6j1YGcrbF33qM3xFyuLEgZSNJNWI0FezeRnpfcwrJA7c+KGQPDW/tXVaoHEh+OKTg/bxWjwCfaEk0y/rcWzFlIZBe9RrE8lj0D2aH6xxgesSzo5/Dj7EcHmw4+V3cmany0gQyCfOEftj27SBoBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "WebScrapeCdkStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "BucketName": {
   "Description": "The name of the S3 bucket where scraped data is stored.",
   "Value": {
    "Ref": "ScrapedDataBucket7530AD91"
   }
  },
  "LambdaFunctionName": {
   "Description": "The name of the Lambda function used for web scraping.",
   "Value": {
    "Ref": "ScraperFunction9503A55F"
   }
  },
  "EventBridgeRuleName": {
   "Description": "The name of the EventBridge rule that triggers the Lambda function.",
   "Value": {
    "Ref": "HourlyScrapeRule48FBB8A8"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}